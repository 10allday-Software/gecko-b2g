#include "nsISupports.idl"
#include "nsISidl.idl"

[scriptable, uuid(4919c96a-29f3-4922-a2f2-cbaff743b3f7)]
interface nsIPowerManagerDelegate : nsISupports {
    void setScreenEnabled(in bool enabled);
};

[scriptable, uuid(0926dc56-fd47-4579-9cbc-3b1c746b2f65)]
interface nsICardInfoManagerDelegate : nsISupports {
    const unsigned long CIT_IMEI    = 0;
    const unsigned long CIT_IMSI    = 1;
    const unsigned long CIT_MSISDN  = 2;

    AString getCardInfo(in long id, in long type);
    void getMncMcc(in long id, in bool isSim, out AString mnc, out AString mcc);
};

[scriptable, uuid(39bff5db-afd9-4f24-9166-12749fbaf0da)]
interface nsINetworkManagerDelegate : nsISupports {
    void getNetworkInfo(out long state, out long type);
};

[scriptable, uuid(cacfb50a-31eb-45b2-b5d1-a79cd493b3e1)]
interface nsIGeckoBridge : nsISupports {
    // Register a power manager delegate that will be called by the power manager service.
    void setPowerManagerDelegate(in nsIPowerManagerDelegate delegate, in nsISidlDefaultResponse callback);
    // Register a card info manager delegate that will be called by the fota service.
    void setCardInfoManagerDelegate(in nsICardInfoManagerDelegate delegate, in nsISidlDefaultResponse callback);
    // Register a network manager delegate that will be called by the fota service.
    void setNetworkManagerDelegate(in nsINetworkManagerDelegate delegate, in nsISidlDefaultResponse callback);

    // Preferences related methods. Call these when a watched preference changes.
    void charPrefChanged(in ACString aPrefName, in ACString aValue, in nsISidlDefaultResponse callback);
    void intPrefChanged(in ACString aPrefName, in long aValue, in nsISidlDefaultResponse callback);
    void boolPrefChanged(in ACString aPrefName, in boolean aValue, in nsISidlDefaultResponse callback);
};
