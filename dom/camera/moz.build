# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

if CONFIG['MOZ_B2G_CAMERA']:
    MOCHITEST_MANIFESTS += ['test/mochitest.ini']

EXPORTS += [
    'CameraCommon.h',

    'CameraPreferences.h',
    'DOMCameraDetectedFace.h',
    'DOMCameraManager.h',
    'ICameraControl.h',
]

UNIFIED_SOURCES += [
    'CameraControlImpl.cpp',
    'CameraPreferences.cpp',
    'CameraPreviewMediaStream.cpp',
    'DOMCameraCapabilities.cpp',
    'DOMCameraControl.cpp',
    'DOMCameraControlListener.cpp',
    'DOMCameraDetectedFace.cpp',
    'DOMCameraManager.cpp',
]

if CONFIG['MOZ_B2G_CAMERA']:
    XPIDL_SOURCES += [
        'nsICameraTestHardware.idl',
    ]

    XPIDL_MODULE = 'dom_camera'

    UNIFIED_SOURCES += [
        'GonkCameraControl.cpp',
        'GonkCameraHwMgr.cpp',
        'GonkCameraManager.cpp',
        'GonkCameraParameters.cpp',
        'GonkRecorderProfiles.cpp',
        'TestGonkCameraControl.cpp',
        'TestGonkCameraHardware.cpp',
    ]

    if CONFIG['ANDROID_VERSION'] >= '29':
        LOCAL_INCLUDES += [
            '%' + '%s/%s' % (CONFIG['GONK_PATH'], d) for d in [
                'frameworks/av/media/libaudioclient/include',
                'out/soong/.intermediates/frameworks/av/camera/libcamera_client/android_arm_armv8-a_core_shared/gen/aidl',
                'out/soong/.intermediates/frameworks/av/media/libaudioclient/libaudioclient/android_arm_armv8-a_core_shared/gen/aidl',
                'out/soong/.intermediates/frameworks/av/media/libmedia/libmedia_omx/android_arm_armv8-a_core_shared/gen/aidl',
                'out/soong/.intermediates/hardware/interfaces/graphics/bufferqueue/2.0/android.hardware.graphics.bufferqueue@2.0_genc++_headers/gen',
                'out/soong/.intermediates/hardware/interfaces/graphics/common/1.2/android.hardware.graphics.common@1.2_genc++_headers/gen',
                'system/core/libprocessgroup/include',
            ]
        ]
    else:
        LOCAL_INCLUDES += [
            '%' + '%s/%s' % (CONFIG['GONK_PATH'], d) for d in [
                'out/soong/.intermediates/frameworks/av/camera/libcamera_client/android_arm_armv7-a-neon_cortex-a7_shared_core/gen/aidl',
                'out/soong/.intermediates/frameworks/av/media/libmedia/libmedia/android_arm_armv7-a-neon_cortex-a7_shared_core/gen/aidl',
            ]
        ]


    if CONFIG['ANDROID_VERSION'] >= '28':
        LOCAL_INCLUDES += [
            '%' + '%s/%s' % (CONFIG['GONK_PATH'], d) for d in [
                'out/soong/.intermediates/hardware/interfaces/graphics/common/1.1/android.hardware.graphics.common@1.1_genc++_headers/gen',
            ]
        ]

    LOCAL_INCLUDES += [
        '%' + '%s/%s' % (CONFIG['GONK_PATH'], d) for d in [
            'frameworks/av/camera/include',
            'frameworks/av/camera/include/camera',
            'frameworks/av/include',
            'frameworks/av/media/libmedia/aidl',
            'frameworks/av/media/libmedia/include',
            'frameworks/av/media/libstagefright/include',
            'frameworks/native/headers/media_plugin/media/openmax',
            'out/soong/.intermediates/hardware/interfaces/graphics/bufferqueue/1.0/android.hardware.graphics.bufferqueue@1.0_genc++_headers/gen',
            'out/soong/.intermediates/hardware/interfaces/graphics/common/1.0/android.hardware.graphics.common@1.0_genc++_headers/gen',
            'out/soong/.intermediates/hardware/interfaces/media/1.0/android.hardware.media@1.0_genc++_headers/gen',
            'out/soong/.intermediates/hardware/interfaces/media/omx/1.0/android.hardware.media.omx@1.0_genc++_headers/gen',
            'system/libhidl/transport/token/1.0/utils/include',
            'system/media/audio/include',
            'system/media/camera/include',
        ]
    ]
    OS_LIBS += [
        'camera_client',
        'media',
        'stagefright_foundation',
    ]

    if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gonk':
        UNIFIED_SOURCES += [
            'GonkCameraSource.cpp',
            'GonkRecorder.cpp',
        ]
    else:
        UNIFIED_SOURCES += [
            'FallbackCameraPlatform.cpp',
        ]

    EXTRA_COMPONENTS += [
        'CameraTestHardware.js',
        'CameraTestHardware.manifest',
    ]
else:
    UNIFIED_SOURCES += [
        'FallbackCameraControl.cpp',
        'FallbackCameraManager.cpp',
    ]

LOCAL_INCLUDES += [
    '../base',
    '../file',
    '/media/libyuv/libyuv/include',
]

include('/ipc/chromium/chromium-config.mozbuild')

if CONFIG['ANDROID_VERSION'] >= '29':
    CXXFLAGS += [
        '-std=c++17',
    ]

# Suppress some GCC warnings being treated as errors:
#  - about attributes on forward declarations for types that are already
#    defined, which complains about an important MOZ_EXPORT for android::AString
if CONFIG['GNU_CC']:
    CXXFLAGS += [
        '-Wno-error=attributes',
        '-Wno-error=shadow',
    ]

FINAL_LIBRARY = 'xul'
