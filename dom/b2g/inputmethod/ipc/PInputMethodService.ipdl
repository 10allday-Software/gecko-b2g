/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set ts=8 sts=2 et sw=2 tw=80: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PContent;

namespace mozilla {
namespace dom {

struct SetCompositionRequest
{
  nsString text;
};

struct EndCompositionRequest
{
  nsString text;
};

struct KeydownRequest
{
  nsString key;
};

struct KeyupRequest
{
  nsString key;
};

struct SendKeyRequest
{
  nsString key;
};

struct DeleteBackwardRequest
{

};

struct SetSelectedOptionRequest
{
  int32_t optionIndex;
};

struct SetSelectedOptionsRequest
{
  int32_t[] optionIndexes;
};

struct CommonRequest
{
  nsString requestName;
};

struct OptionDetail
{
  bool group;
  bool inGroup;
  nsString text;
  bool disabled;
  bool selected;
  bool defaultSelected;
  int32_t optionIndex;
};

struct OptionGroupDetail
{
  bool group;
  nsString label;
  bool disabled;
};

union OptionDetailCollection
{
  OptionDetail;
  OptionGroupDetail;
};

struct SelectionChoices
{
  bool multiple;
  OptionDetailCollection[] choices;
};

struct HandleFocusRequest
{
  nsString type;
  nsString inputType;
  nsString value;
  nsString max;
  nsString min;
  nsString lang;
  nsString inputMode;
  bool voiceInputSupported;
  nsString name;
  uint32_t selectionStart;
  uint32_t selectionEnd;
  SelectionChoices choices;
};

struct HandleBlurRequest
{
  uint64_t id;
};

union InputMethodServiceRequest
{
  SetCompositionRequest;
  EndCompositionRequest;
  KeydownRequest;
  KeyupRequest;
  SendKeyRequest;
  DeleteBackwardRequest;
  HandleFocusRequest;
  HandleBlurRequest;
  SetSelectedOptionRequest;
  SetSelectedOptionsRequest;
  CommonRequest;
};

struct SetCompositionResponse
{
  nsresult status;
};

struct EndCompositionResponse
{
  nsresult status;
};

struct KeydownResponse
{
  nsresult status;
};

struct KeyupResponse
{
  nsresult status;
};

struct SendKeyResponse
{
  nsresult status;
};

struct DeleteBackwardResponse
{
  nsresult status;
};

struct CommonResponse
{
  nsString responseName;
  nsresult status;
};

struct DoSetCompositionResponse
{
  nsString text;
};

struct DoEndCompositionResponse
{
  nsString text;
};

struct DoKeydownResponse
{
  nsString key;
};

struct DoKeyupResponse
{
  nsString key;
};

struct DoSendKeyResponse
{
  nsString key;
};

struct DoDeleteBackwardResponse
{

};

struct DoSetSelectedOptionResponse
{
  int32_t optionIndex;
};

struct DoSetSelectedOptionsResponse
{
  int32_t[] optionIndexes;
};
union InputMethodServiceResponse
{
  SetCompositionResponse;
  EndCompositionResponse;
  KeydownResponse;
  KeyupResponse;
  SendKeyResponse;
  DeleteBackwardResponse;
  DoSetCompositionResponse;
  DoEndCompositionResponse;
  DoKeydownResponse;
  DoKeyupResponse;
  DoSendKeyResponse;
  DoDeleteBackwardResponse;
  DoSetSelectedOptionResponse;
  DoSetSelectedOptionsResponse;
  CommonResponse;
};

async protocol PInputMethodService
{
  manager PContent;

child:
  async Response(InputMethodServiceResponse aResponse);

parent:
  async __delete__();
  async Request(InputMethodServiceRequest aRequest);
};

} // namespace dom
} // namespace mozilla